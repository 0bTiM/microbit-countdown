{"entries":[{"timestamp":1727338233067,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.showLeds(`\n. . . . .\n. . . . .\n. . # . .\n. . . . .\n. . . . .\n`)\nlet emptyLevel = `. . . . . `\nlet fullLevel = `. . . . . `\n\nlet display = ``\n\nfor (let i = 0; i < 5; i++){\n    display.concat(fullLevel)\n}\nconsole.log(display)\nbasic.showLeds(`\n# # # # #\n#`)\n"],[0,"\n"]],"start1":0,"start2":0,"length1":262,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pt-only\""],[1,",\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":277,"start2":277,"length1":11,"length2":42}]}]},{"timestamp":1727338832193,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let totalTime = 6\nlet delay = totalTime * 1000/5\n\nbasic.showLeds(`\n#####\n#####\n#####\n#####\n#####\n`)\nbasic.pause(delay)\nbasic.showLeds(`\n.....\n.....\n#####\n#####\n#####\n`)\nbasic.pause(delay)\nbasic.showLeds(`\n.....\n.....\n#####\n#####\n#####\n`)\nbasic.pause(delay)\nbasic.showLeds(`\n.....\n.....\n.....\n#####\n#####\n`)\nbasic.pause(delay)\nbasic.showLeds(`\n.....\n.....\n.....\n.....\n#####\n`)\nbasic.pause(delay)\nbasic.showLeds(`\n.....\n.....\n.....\n.....\n.....\n`)\nbasic.pause(delay)\nbasic.showLeds(`\n.....\n#...#\n.....\n#...#\n.###.\n"],[1,"basic.showLeds(`\n. . . . .\n. . . . .\n. . # . .\n. . . . .\n. . . . .\n`)\nlet emptyLevel = `. . . . . `\nlet fullLevel = `. . . . . `\n\nlet display = ``\n\nfor (let i = 0; i < 5; i++){\n    display.concat(fullLevel)\n}\nconsole.log(display)\nbasic.showLeds(`\n# # # # #\n#"],[0,"`)\n"],[1,"\n"]],"start1":0,"start2":0,"length1":514,"length2":262}]}]},{"timestamp":1727339388594,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"input.onButtonPressed(Button.A, function() {\n    "],[0,"let "]],"start1":0,"start2":0,"length1":53,"length2":4},{"diffs":[[0,"ime = 6\n"],[-1,"    "],[0,"let dela"]],"start1":10,"start2":10,"length1":20,"length2":16},{"diffs":[[0,"1000"],[-1," / 6\n\n    "],[1,"/5\n\n"],[0,"basi"]],"start1":42,"start2":42,"length1":18,"length2":12},{"diffs":[[0,"\n#####\n#####\n`)\n"],[-1,"    "],[0,"basic.pause(dela"]],"start1":84,"start2":84,"length1":36,"length2":32},{"diffs":[[0,"ic.pause(delay)\n"],[-1,"    "],[0,"basic.showLeds(`"]],"start1":103,"start2":103,"length1":36,"length2":32},{"diffs":[[0,"eds(`\n.....\n"],[-1,"#####"],[1,"....."],[0,"\n#####\n#####"]],"start1":130,"start2":130,"length1":29,"length2":29},{"diffs":[[0,"\n#####\n#####\n`)\n"],[-1,"    "],[0,"basic.pause(dela"]],"start1":153,"start2":153,"length1":36,"length2":32},{"diffs":[[0,"ic.pause(delay)\n"],[-1,"    "],[0,"basic.showLeds(`"]],"start1":172,"start2":172,"length1":36,"length2":32},{"diffs":[[0,"\n#####\n#####\n`)\n"],[-1,"    "],[0,"basic.pause(dela"]],"start1":222,"start2":222,"length1":36,"length2":32},{"diffs":[[0,"ic.pause(delay)\n"],[-1,"    "],[0,"basic.showLeds(`"]],"start1":241,"start2":241,"length1":36,"length2":32},{"diffs":[[0,"\n#####\n#####\n`)\n"],[-1,"    "],[0,"basic.pause(dela"]],"start1":291,"start2":291,"length1":36,"length2":32},{"diffs":[[0,"ic.pause(delay)\n"],[-1,"    "],[0,"basic.showLeds(`"]],"start1":310,"start2":310,"length1":36,"length2":32},{"diffs":[[0,"..\n#####\n`)\n"],[-1,"    "],[0,"basic.pause("]],"start1":364,"start2":364,"length1":28,"length2":24},{"diffs":[[0,"ic.pause(delay)\n"],[-1,"    "],[0,"basic.showLeds(`"]],"start1":379,"start2":379,"length1":36,"length2":32},{"diffs":[[0,"....\n`)\n"],[-1,"    "],[0,"basic.pa"]],"start1":437,"start2":437,"length1":20,"length2":16},{"diffs":[[0,"ay)\n"],[-1,"    "],[0,"basi"]],"start1":460,"start2":460,"length1":12,"length2":8},{"diffs":[[0,"...\n"],[-1,"."],[0,"#."],[-1,"#"],[0,"."],[1,".#"],[0,"\n..."]],"start1":483,"start2":483,"length1":13,"length2":13},{"diffs":[[0,"\n`)\n"],[-1,"\n})\n"]],"start1":510,"start2":510,"length1":8,"length2":4}]}]},{"timestamp":1727339865448,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"\n\n"],[0,"input.on"]],"start1":0,"start2":0,"length1":10,"length2":8}]}]},{"timestamp":1727340844890,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"input.o"],[0,"\n\ninput."]],"start1":0,"start2":0,"length1":15,"length2":8}]}]},{"timestamp":1727340847227,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let timers = [\n    {\n        name: \"A\",\n        time: 5\n    },\n    {\n        name: \"B\",\n        time: 7 \n    },\n    {\n        name: \"C\",\n        time: 11\n    },\n    {\n        name: \"D\",\n        time: 13\n    }\n]\nlet selectedTimer = 0\nconst changeTimer = () => {\n    selectedTimer = (selectedTimer + 1)%4\n}\n\nbasic.showString(name)"],[1,"input.o"],[0,"\n\nin"]],"start1":0,"start2":0,"length1":332,"length2":11},{"diffs":[[0,"ton."],[-1,"B, () => {\n    basic.showString(name)\n})\n\ninput.onButtonPressed(Button.A, () => {"],[1,"A, function() {\n    let totalTime = 6"],[0,"\n   "]],"start1":34,"start2":34,"length1":89,"length2":45},{"diffs":[[0,"elay = t"],[1,"otalT"],[0,"ime * 10"]],"start1":85,"start2":85,"length1":16,"length2":21},{"diffs":[[0,"0 / "],[-1,"5"],[1,"6"],[0,"\n\n  "]],"start1":107,"start2":107,"length1":9,"length2":9},{"diffs":[[0,"`\n.....\n"],[1,".....\n.....\n.....\n.....\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n"],[0,".#.#.\n.."]],"start1":518,"start2":518,"length1":16,"length2":93}]}]},{"timestamp":1727341441935,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"cons"],[1,"le"],[0,"t timers"]],"start1":0,"start2":0,"length1":12,"length2":10},{"diffs":[[0,"}\n]\n"],[-1,"\nconst counterPhase = [\n    () => basic.showLeds(`\n    .....\n    `\n    )\n]\n\nlet selectedTimer = 0\ninput.onButtonPressed(Button.AB,"],[1,"let selectedTimer = 0\nconst changeTimer ="],[0," () "]],"start1":207,"start2":207,"length1":138,"length2":49},{"diffs":[[0,"+ 1)"],[-1," % "],[1,"%"],[0,"4\n}"],[-1,")"],[0,"\n\n"],[-1,"const showTimerName = () => basic.showString(timers[selectedTimer].name)\n\nshowTimerName()\n\ninput.onButtonPressed(Button.B, showTimerName"],[1,"basic.showString(name)\n\ninput.onButtonPressed(Button.B, () => {\n    basic.showString(name)\n}"],[0,")\n\ni"]],"start1":296,"start2":296,"length1":153,"length2":106},{"diffs":[[0,"###.\n`)\n\n})\n"],[-1,"\n"]],"start1":905,"start2":905,"length1":13,"length2":12}]}]},{"timestamp":1727342040805,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n\nconst "],[-1,"showC"],[1,"c"],[0,"ounterPh"]],"start1":212,"start2":212,"length1":21,"length2":17},{"diffs":[[0,"    "],[-1,".#.#.\n    .....\n    #...#\n    .###.`\n    ),\n    () => basic.showLeds(`\n    .....\n    .....\n    .....\n    .....\n    #####`\n    ),\n    () => basic.showLeds(`\n    .....\n    .....\n    .....\n    #####\n    #####`\n    ),\n    () => basic.showLeds(`\n    .....\n    .....\n    #####\n    #####\n    #####`\n    ),\n    () => basic.showLeds(`\n    .....\n    #####\n    #####\n    #####\n    #####`\n    ),\n    () => basic.showLeds(`\n    #####\n    #####\n    #####\n    #####\n    #####`\n    )\n]\n\nlet "],[1,"`\n    )\n]\n\nlet selectedTimer = 0\ninput.onButtonPressed(Button.AB, () => {\n    selectedTimer = ("],[0,"sele"]],"start1":274,"start2":274,"length1":483,"length2":103},{"diffs":[[0,"edTimer "],[-1,"= 0"],[1,"+ 1) % 4\n})\n"],[0,"\nconst s"]],"start1":379,"start2":379,"length1":19,"length2":28},{"diffs":[[0,"e)\n\n"],[-1,"// Cycle through the Timers\ninput.onButtonPressed(Button.AB, () => {\n    selectedTimer = (selectedTimer + 1) % 4\n    "],[0,"show"]],"start1":470,"start2":470,"length1":125,"length2":8},{"diffs":[[0,"e()\n"],[-1,"})\n\n// Reset"],[0,"\ninp"]],"start1":486,"start2":486,"length1":20,"length2":8},{"diffs":[[0,"e)\n\n"],[-1,"// Start\n"],[0,"inpu"]],"start1":535,"start2":535,"length1":17,"length2":8},{"diffs":[[0,"delay = "],[-1,"timers[selectedTimer]."],[0,"time * 1"]],"start1":587,"start2":587,"length1":38,"length2":16},{"diffs":[[0,"/ 5\n"],[1,"\n"],[0,"    "],[-1,"for (let i = 5; i >= 0; i--) {\n        showCounterPhase[i]()\n        basic.pause(delay)\n    }\n})\n\n// On power up, show selected timer\nshowTimerName("],[1,"basic.showLeds(`\n#####\n#####\n#####\n#####\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n#####\n#####\n#####\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.....\n#####\n#####\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.....\n.....\n#####\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.....\n.....\n.....\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.#.#.\n.....\n#...#\n.###.\n`)\n\n}"],[0,")\n\n"]],"start1":607,"start2":607,"length1":159,"length2":449}]}]},{"timestamp":1727342665798,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":205,"start2":205,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1727338233066,"editorVersion":"7.0.42","text":{"main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Countdown\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1727340844890,"editorVersion":"7.0.42","text":{"main.ts":"input.onButtonPressed(Button.A, function() {\n    let totalTime = 6\n    let delay = totalTime * 1000 / 6\n\n    basic.showLeds(`\n#####\n#####\n#####\n#####\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n#####\n#####\n#####\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.....\n#####\n#####\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.....\n.....\n#####\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.....\n.....\n.....\n#####\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.....\n.....\n.....\n.....\n`)\n    basic.pause(delay)\n    basic.showLeds(`\n.....\n.#.#.\n.....\n#...#\n.###.\n`)\n\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"Countdown\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1727342665798,"editorVersion":"7.0.42","text":{"main.ts":"const timers = [\n    {\n        name: \"A\",\n        time: 5\n    },\n    {\n        name: \"B\",\n        time: 7 \n    },\n    {\n        name: \"C\",\n        time: 11\n    },\n    {\n        name: \"D\",\n        time: 13\n    }\n]\n\nconst showCounterPhase = [\n    () => basic.showLeds(`\n    .....\n    .#.#.\n    .....\n    #...#\n    .###.`\n    ),\n    () => basic.showLeds(`\n    .....\n    .....\n    .....\n    .....\n    #####`\n    ),\n    () => basic.showLeds(`\n    .....\n    .....\n    .....\n    #####\n    #####`\n    ),\n    () => basic.showLeds(`\n    .....\n    .....\n    #####\n    #####\n    #####`\n    ),\n    () => basic.showLeds(`\n    .....\n    #####\n    #####\n    #####\n    #####`\n    ),\n    () => basic.showLeds(`\n    #####\n    #####\n    #####\n    #####\n    #####`\n    )\n]\n\nlet selectedTimer = 0\nconst showTimerName = () => basic.showString(timers[selectedTimer].name)\n\n// Cycle through the Timers\ninput.onButtonPressed(Button.AB, () => {\n    selectedTimer = (selectedTimer + 1) % 4\n    showTimerName()\n})\n\n// Reset\ninput.onButtonPressed(Button.B, showTimerName)\n\n// Start\ninput.onButtonPressed(Button.A, () => {\n    let delay = timers[selectedTimer].time * 1000 / 5\n    for (let i = 5; i >= 0; i--) {\n        showCounterPhase[i]()\n        basic.pause(delay)\n    }\n})\n\n// On power up, show selected timer\nshowTimerName()\n\n","README.md":"","pxt.json":"{\n    \"name\": \"Countdown\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[],"lastSaveTime":1727342665812}